# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json
---

# This pipeline is meant to be run via the Buildkite API, and is
# only used for release builds

agents:
  queue: "android"

steps:
  #################
  # Gradle Wrapper Validation
  #################
  - label: "Gradle Wrapper Validation"
    command: |
      # .buildkite/commands/checkout-release-branch.sh "$RELEASE_VERSION"
      validate_gradle_wrapper
    priority: 1
    plugins: [$CI_TOOLKIT]

  # Wait for Gradle Wrapper to be validated before running any other jobs
  - wait

  #################
  # Release Builds
  #################
  - group: "ðŸš€ Release Builds"
    steps:

      - label: ":wordpress: :android: Release Build"
        key: wpbuild
        command: |
          echo "RELEASE_VERSION: $RELEASE_VERSION"
        priority: 1
        depends_on: wplint
        plugins: [$CI_TOOLKIT]
        # notify:
        #   - slack: "#build-and-ship"
        # retry:
        #   manual:
        #     # If those jobs fail, one should always prefer re-triggering a new build from ReleaseV2 rather than retrying the individual job from Buildkite
        #     allowed: false

      - label: ":jetpack: :android: Release Build"
        key: jpbuild
        command: |
          echo "RELEASE_VERSION: $RELEASE_VERSION"
        priority: 1
        depends_on: jplint
        plugins: [$CI_TOOLKIT]
        # notify:
        #   - slack: "#build-and-ship"
        # retry:
        #   manual:
        #     # If those jobs fail, one should always prefer re-triggering a new build from ReleaseV2 rather than retrying the individual job from Buildkite
        #     allowed: false

  #################
  # GitHub Release
  #################
  - label: ":github: Release"
    depends_on:
      - wpbuild
      - jpbuild
    command: |
      echo "RELEASE_VERSION: $RELEASE_VERSION"
    priority: 1
    plugins: [$CI_TOOLKIT]
