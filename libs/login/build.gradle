plugins {
    id "com.android.library"
    id "org.jetbrains.kotlin.android"
    alias(libs.plugins.kotlinx.kover)
    alias(libs.plugins.ksp)
}

android {
    namespace "org.wordpress.android.login"


    defaultConfig {
        compileSdk rootProject.compileSdkVersion
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
    }
    buildFeatures {
        buildConfig true
    }
    lint {
        enable += 'UnknownNullness'
        disable 'UseTomlInstead'
    }
}

dependencies {
    implementation libs.wordpress.utils
    implementation libs.gravatar

    implementation libs.androidx.appcompat.main

    implementation libs.androidx.constraintlayout.main
    implementation libs.google.material

    implementation libs.androidx.core.main

    api libs.google.play.services.auth

    implementation project(":libs:fluxc")

    implementation libs.bumptech.glide.main
    ksp libs.bumptech.glide.ksp

    implementation libs.androidx.credentials.main
    implementation libs.androidx.credentials.play.service.auth

    // Dagger
    implementation libs.google.dagger
    ksp libs.google.dagger.compiler
    implementation libs.google.dagger.android.support
    ksp libs.google.dagger.android.processor

    lintChecks libs.wordpress.lint

    testImplementation libs.junit
    testImplementation libs.mockito.core
    testImplementation libs.androidx.arch.core.testing
    testImplementation libs.robolectric
    testImplementation libs.assertj.core
}

// Add properties named "wp.xxx" to our BuildConfig
android.buildTypes.all { buildType ->
    Properties gradleProperties = new Properties()
    File propertiesFile = file("gradle.properties")
    if (propertiesFile.exists()) {
        gradleProperties.load(new FileInputStream(propertiesFile))
    } else {
        // Load defaults
        gradleProperties.load(new FileInputStream(file("gradle.properties-example")))
    }
    gradleProperties.any { property ->
        if (property.key.toLowerCase().startsWith("wp.")) {
            buildType.buildConfigField "String", property.key.replace("wp.", "").replace(".", "_").toUpperCase(),
                    "\"${property.value}\""
        }
        if (property.key.toLowerCase().startsWith("wp.res.")) {
            buildType.resValue "string", property.key.replace("wp.res.", "").replace(".", "_").toLowerCase(),
                    "${property.value}"
        }
    }
}
